                            PL/SQL
                         ============


1.declaring a variable
======================
  in declare section of pl/sql block by using following syntax
syntax:-
=======
variablename datatype(size);

2.storing a value into variable:-
================================
by using assignment operator(:=) we can also store a value into 
variable

syntax:-
=======
variablename:=value;

.we can also use this assignment operator(:=) either in declare
section or in executable section in pl/sql block.

eg:-
===
declare
a number(10);
begin
a:=80;
end;
/

3.display a message or variable value:-
======================================
syntax:-
=======
dbms_output.put_line('message');

dbms_output.put_line('variablename');
    |          |
package      procedure
name         name

.This package is used in either in executable section or in exception
 section of pl/sql block.

eg:-
===
begin
dbms_output.put_line('welcome');
end;
/

PL/SQL procedure successfully completed

  whenever we are passing any data into dbms_output package then 
that data not visible in sql plus tool.because whenever we are
using dbms_output then oracle server internally automatically 
creates a buffer.if we want to retriew this buffer data into
sqlplus tool then we must set server output envinornment variable
at sql prompt by using following syntax.

SQL<set serveroutput on;
SQL>/
welcome

---------------------------------------------------------------------

1.Write a PL/SQL program to print a message 'WELCOME TO PL/SQL  
  CLASSES FOR MY DEAR WONDERFULL BATACH39' on screen?

 SET SERVEROUTPUT ON;
SQL> BEGIN
    DBMS_OUTPUT.PUT_LINE('WELCOME TO PL/SQL CLASSES FOR MY DEAR WONDERFULL BATACH39');
    END;
    /


Develop PL/SQL program:-
======================
.open any text editor like notepad,editplus,notepad++

.write following code

  begin
dbms_output.put_line('HELLo');
end;
/

.save the file in "D:" drive, "PLSQLprograms" folder with the 
 name 'HelloDemo.sql'

compiling and run the PL/SQL program

.open SQLPLUS

.login as user

.write the following commands.

SQL>set serveroutput on;
SQL>@d:\PLSQLprograms\HelloDemo.sql
output:
HELLO

NOTE:-To avoid of displaying old and new parametes setverify off as
      following

SQL>set verify off;


----------------------------------------------------------------------

2.Write a PL/SQL program to add 2 numbers.and two numbers are 
  enter from runtime ?


 DECLARE
      A  NUMBER(3);
      B  NUMBER(3);
      C  NUMBER(3);
    BEGIN
     A := &A;
     B := &B;
     C := A + B;
    DBMS_OUTPUT.PUT_LINE(C);
   END ;
   /
 



----------------------------------------------------------------------
 *
*** select.....into clause:- 
 *  ======================

   select into clause is used to retrive data from table then that 
data is storing into pl/sql variable.

  select into clause always returns single record or single value
at a time from a table.

syntax:-
=======

select col1,col2.......into variable1,variable2.....
from tablename where condition

this clause is used in executable section of the pl/sql block.


3.Write a PL/SQL program for user entered empno then display name
  of the employee and his salary from emp table?


DECLARE
  ENO NUMBER(5);
  NAME VARCHAR2(20);
  SALARY NUMBER(5);
   
BEGIN
  ENO := &EMPNO ;
  SELECT ENAME,SAL INTO NAME, SALARY FROM EMP WHERE EMPNO = ENO;
  DBMS_OUTPUT.PUT_LINE(NAME);
  DBMS_OUTPUT.PUT_LINE(SALARY);
  END;
  /


----------------------------------------------------------------------

4.Write a PL/SQL program which is used to retrive maximum salary
      from emp table and store it into PL/SQL variable
              and display maximum salary?


DECLARE 
 VMAXSAL NUMBER(5);
 
BEGIN 
SELECT MAX(SAL) INTO VMAXSAL FROM EMP;
DBMS_OUTPUT.PUT_LINE(VMAXSAL);
END;
/




----------------------------------------------------------------------

5.Write a PL/SQL program to find maximum number from 2 numbers
  and store it into another variable?

note:-in pl/sql expressions we are not allowed to use group functions,
=====  decode conversion functions.but we are allowed to use number
      functions,character functions,date functions in pl/sql 
      expressions


DECLARE 

A NUMBER(5);
B NUMBER(5);
C NUMBER(5);

BEGIN
A := &A;
B := &B;

IF A > B THEN
   C := A;
ELSE 
   C := B;
END IF;
DBMS_OUTPUT.PUT_LINE('BIG NUMBER IS : '||C);
END;
/



----------------------------------------------------------------------

6.Write a PL/SQL program for user entered empno then display name
  of the employee and his salary and hiredate from emp table
            by using column level attributes?

DECLARE 
  VENAME EMP.ENAME%TYPE;
  VSAL  EMP.SAL%TYPE;
  VHIRE  EMP.HIREDATE%TYPE;
  VEMPNO EMP.EMPNO%TYPE;

BEGIN
VEMPNO := &EMPNO;
SELECT ENAME, SAL, HIREDATE INTO VENAME, VSAL, VHIRE FROM EMP WHERE EMPNO = VEMPNO;
DBMS_OUTPUT.PUT_LINE(VENAME ||'  '||VSAL||'  '||VHIRE);
END;
/




1)column level attributes:-in this method we are defining attributes
                           for individual columns.column level 
attributes are represented by using %type.

syntax:-
========
variable tablename.columnname%type; 

----------------------------------------------------------------------

7.Write a PL/SQL program for user entered empno then display 
      all details of employee from emp table by using 
               row level attributes?

DECLARE 
   VEMPNO EMP.EMPNO%TYPE;
   R EMP%ROWTYPE;

BEGIN
  VEMPNO := &EMPNO;

SELECT * INTO R.EMPNO, R.ENAME, R.JOB, R.MGR, R.HIREDATE, R.SAL, R.COMM, R.DEPTNO 
FROM EMP WHERE EMPNO = VEMPNO;

DBMS_OUTPUT.PUT_LINE(R.EMPNO||'   '|| R.ENAME||'  || R.JOB||'  '||R.MGR||'  '||R.HIREDATE||'  '||R.SAL||'  '||R.COMM||'  '||R.DEPTNO); 
END;
/


 EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO

 *
***row level attributes:-in this method a single variable can represent
 * ====================  all different data types in a row with in a
table this variable also called as record type varibale.it is also
same strucutures in c language.Row level attributes are represented
by using %rowtype.


synatax:-
========
variablename tablename%rowtype;

eg:-
declare                 perticular cell you want(.notation)
i emp%rowtype;          /
                    i.ename              i.hiredate  i.sal
    i                /                        /       /
  -----     empno  ename    job     mgr   hiredate   sal  comm  deptno
  | . |---->7902   FORD   ANALYST   7566  03-DEC-81  4900        20
  -----

----------------------------------------------------------------------

8.Write a PL/SQL program to increase salary of the given empno
  with given amount.after increasing the sal display the salary
  of the employee?

enter empno:7499
enter amount:2000
salary increased(msg i want to display)
sal is:3600


DECLARE
 VEMPNO EMP.EMPNO%TYPE;
 VSAL EMP.SAL%TYPE;
 VAMT NUMBER(5);
 
BEGIN
  VEMPNO := &EMPNO;
  VAMT := &AMT;

SELECT SAL INTO VSAL FROM EMP WHERE EMPNO = VEMPNO;
VSAL := VSAL + VAMT;
DBMS_OUTPUT.PUT_LINE('sal is : '||VSAL);

END;
/




----------------------------------------------------------------------

9.Write a PL/SQL program to calculate the experience of the user
  enter empno

enter empno:7902
experience is:42years


DECLARE
VEMPNO EMP.EMPNO%TYPE;
VEXP NUMBER(3);

BEGIN
VEMPNO := &EMPNO;
SELECT (SYSDATE-HIREDATE)/365 INTO VEXP FROM EMP WHERE EMPNO = VEMPNO;

DBMS_OUTPUT.PUT_LINE('experience is:'||VEXP||'years');
end;
/


----------------------------------------------------------------------

10.Write a PL/SQL program eligible for voting system 

if age is>=18 then display a msg:u r eligible for voting
if age is<18 then display a msg :u not eligible for voting or
                                 better luck next time


DECLARE 
AGE NUMBER(3);

BEGIN
AGE := &AGE;

IF AGE >= 18 THEN 
          DBMS_OUTPUT.PUT_LINE('u r eligible for voting');
ELSE 
          DBMS_OUTPUT.PUT_LINE('u not eligible for voting ');
END IF;

END;
/ 


----------------------------------------------------------------------

11.Write a PL/SQL program from dept table by using
   conditional statements 

if deptno=10 then display a msg ---->ten
if deptno=20 then display a msg ---->twenty
if deptno=30 then display a msg ---->thirty
if deptno=40 then display a msg ---->others 


DECLARE 
DEPTNO NUMBER(2);

BEGIN
DEPTNO := &DEPTNO;

IF DEPTNO = 10 THEN  
          DBMS_OUTPUT.PUT_LINE('TEN');
ELSEIF DEPTNO = 20 THEN  
          DBMS_OUTPUT.PUT_LINE('TWENTY');

ELSEIF DEPTNO = 30 THEN  
          DBMS_OUTPUT.PUT_LINE('THIRTY');

ELSE   
          DBMS_OUTPUT.PUT_LINE('OTHERS'); 
END IF;

END;
/


DECLARE 
    DEPTNO NUMBER(2);

BEGIN
    DEPTNO := &DEPTNO;

    IF DEPTNO = 10 THEN  
        DBMS_OUTPUT.PUT_LINE('TEN');
    ELSIF DEPTNO = 20 THEN  
        DBMS_OUTPUT.PUT_LINE('TWENTY');
    ELSIF DEPTNO = 30 THEN  
        DBMS_OUTPUT.PUT_LINE('THIRTY');
    ELSE   
        DBMS_OUTPUT.PUT_LINE('OTHERS'); 
    END IF;

END;
/



----------------------------------------------------------------------

12.Write a PL/SQL program to print 2024 calendar?

01-JAN-24
02-JAN-24
.........
.........
31-DEC-24


DECLARE 
 D DATE := TO_DATE('01-JAN-24','DD-MM-YYYY');

BEGIN
LOOP
   DBMS_OUTPUT.PUT_LINE(D);
    D := D+1;
    EXIT WHEN D > TO_DATE('31-DEC-24','DD-MM-YYYY');
    END LOOP;
END;
/





----------------------------------------------------------------------


13.Write a PL/SQL program to calculate total,averege and result.

   STUDENT
  SID      SNAME       M1     M2     M3
  1001    GOWTHAM      80     60     80
  1002    RAJU         50     30     60

  RESULT
  SID      TOTAL      AVG      RESULT

enter sid ---->1001
result is calculated and stored in result table

 insert these values into ressult table
 max marks:100
 min marks:35 for pass in each subject

NOTE:-if student got 35 or more in each subject then result is-->PASS
      if student got <35 in any subject then result is -->FAIL



DECLARE 
  VSNO STUDENTS.SNO%TYPE;
  M1 STUDENTS.SUB1%TYPE;
  M2 STUDENTS.SUB2%TYPE;
  M3 STUDENTS.SUB3%TYPE;
BEGIN

VSNO := &SNO;
 SELECT SUB1, SUB2, SUB3 INTO M1, M2, M3 FROM STUDENTS WHERE SNO = VSNO;

IF M1 >= 35 AND M2 >= 35 AND M3 >= 35 THEN
     DBMS_OUTPUT.PUT_LINE('PASS');
ELSE 
   DBMS_OUTPUT.PUT_LINE('FAIL');
END IF;

END;
/ 


----------------------------------------------------------------------

14.Write a PL/SQL program to print 1..10 numbers by using
   for loop

 
BEGIN

 FOR I IN 1..10 LOOP
    DBMS_OUTPUT.PUT_LINE(I);

END LOOP;

END;
/


----------------------------------------------------------------------

15.Write a PL/SQL program to print 10..1 numbers reverse by
   using for loop

DECLARE 
I NUMBER(2);

BEGIN

 FOR I IN REVERSE 1..10 LOOP
    DBMS_OUTPUT.PUT_LINE(I);

END LOOP;

END;
/

-----------------------------------------------------------------------
