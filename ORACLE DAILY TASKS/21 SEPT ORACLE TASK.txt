                   GROUP FUNCTIONS AND NUMBER FUNCTIONS  
               ===========================================

                                                              SOLVED BY - KIRAN BURANDE (9359510436)
            

1.find sum of salaries of all employees

SQL> SELECT SUM(SAL) AS TOTALSAL FROM EMP;


2.find sum of salaries of all managers

SQL> SELECT SUM(SAL) AS TOTALSAL FROM EMP WHERE JOB='MANAGER';


3.find  sum of salaries of  deptno 10,30

SQL> SELECT SUM(SAL) AS TOTALSAL FROM EMP WHERE DEPTNO IN (10,30);


4.find average salaries of all employees

SQL> SELECT AVG(SAL) AS TOTALSAL FROM EMP;


5.find average salries of all clerks

SQL> SELECT AVG(SAL) AS TOTALSAL FROM EMP WHERE JOB='CLERK';


6.find minmum salary in emp table

SQL> SELECT MIN(SAL) FROM EMP ;


7.find maximum salary in emp table

SQL> SELECT MAX(SAL) FROM EMP ;


8.find the no of emploees in emp table

SQL> SELECT COUNT(*) FROM EMP;


9.find the no of managers in emp table

SQL> SELECT COUNT(*) FROM EMP WHERE JOB='MANAGER';


10.find no of employees in 30th department

Count(column name):- It counts number of not null values within
==================      a column.

SQL> SELECT COUNT(*) FROM EMP WHERE DEPTNO =30 ;
 

10)find how many employees are getting commission?

SQL> SELECT COUNT(*) FROM EMP WHERE COMM IS NOT NULL AND COMM <> 0 ;


mod(m,n):-it gives remainder after 'm' divided by 'n'
======== 

11)what is the output of following
SQL>select mod(10,2) from dual;
A.1 
B.error
c.0   <==============
D.none

Round(m,n):- It rounds given floated valued number 'm' based on 'n'.
==========

Eg:-
===
SQL>select mod(10,2) from dual;

           2

SQL> select round(1.23456,3) from dual;

          1.235 <=====
    
   round(1.23456,3) -->+ve number checks left to right right up to 
                         3 decimal
      
         1.234/56  ---->round function checks remaing numbers 
                        above 50% or below 50%
  
               56 ----->56 is above 50% 1 will added to 234

           1.235

Note:- Round always checks remaining number if remaining number is 
====      above 50% then one added to the rounded number.

Eg:-
===
 SQL> select round(1285.765,-1) from dual;

           1285.765,-1  ------>-ve sign take decimal right to left

           1280         ------->-1 is set to zero first.5 is replaced with 0
                                 5 is above 50% add 1 ->8


          1290   <===============

select round(1285,-2) from dual;

1300



Execution:-
=========
Step1: 1285->(85 is replace with 00. 85 is above 50%) 
Step2: 1280
       +1
---------------
       1300


Trunc(m,n):- It truncates given floated values number 'm'
==========           based  on 'n'.

This function doesn't check remaing number.

Eg:-
====
SQL>select trunc(1.8) from dual;
      
         1

SQL> select trunc(1.23456,3) from dual;

       1.234

Greatest(exp1,exp2,…. expn), Least(exp1,exp2,…. expn):-
=====================================================
   Greatest returns maximum value among given expressions. Where as
Least returns minimum value among given expressions.

Eg:-
====
SQL> select greatest(3,5,8,9) from dual ;


SQL> select ename, sal, comm, greatest(sal,comm)
     from emp 
    where comm is not null; 

ENAME             SAL       COMM GREATEST(SAL,COMM)
---------- ---------- ---------- ------------------
ALLEN            1600        300               1600
WARD             1250        500               1250
MARTIN           1250       1400               1400




Ceil() and Floor():- These two functions always return integers.
===================

Ceil() returns nearest greatest integer where as
floor() returns nearest lowest integer.

Eg:-
===
SQL>select ceil(1.3) from dual;

2

SQL>select floor(1.9) from dual;

1


          | 
          |
          |        1.4 near to 1,but ceil() returns greatest
          |              integer is 2
          |                |
       ---|----------------|-----------------------------
          |1.1  1.2  1.3  1.4  1.5  1.6  1.7  1.8  1.9  2
          |

12.select round(89.4),trunc(89.8) from dual;
Which values are displayed
A.89,90
B.90,90
C.90,89
D.89,89   <==========

13.which of the following are the five built in functions
A.COUNT,SUM,AVG,MAX,MIN    <=============
B.NSUM,AVG,MIN,MAX,MULT
C.SUM,AVG,MULT,DIV,MIN
D.SUM,AVG,MIN,MAX,NAME

14)What is the output of the following
select max(500,800) from dual;
A.500
B.500,800
C.800   
D.error  <============

15.select round(45.95),trunc(45.95) from dual;
which values are displayed
A.46 and 45 <=========
B.45 and 46
C.46 and 46
D.none

16.select greatest(500,800,100,150,200) from dual;
A.100
B.800  <==========
C.200
D.error

17.select ceil(7.2),floor(7.8) from dual;
A.7,8
B.none
C.8,8
D.8,7  <==========

 *
***Dual ():- Dual is a predefined virtual table which contains only
 *=======    one row and one column.Dual table is used to test oracle
            predefined,user defined functions functionality.


ex:-(testing predefined functions functionality)
================================================
sql>select nvl(null,40) from dual;
   
             40

sql>select nvl(20,30) from dual;

             20
   when ever we are installing oracle server then automatically 
dual table is created with in sys user.that why we can not perform
DML operations in dual table.but we are allowed to use dual table 
in all other users.

    by using dual table we can also perform mathematical
operations.

Eg:-
===
SQL> select 100+200 from dual; //one value as result &
                                 work with non table data.

.when we want to get one value as result when we want to work with 
non table values then use dual.

 *
***Note:- in oracle by default datatype of the dual table column
 * =====     is varchar2.
 
SQL> select * from dual;

     D    ------->dummy column
   -----
     X

SQL>desc dual;

 Name                Type
-------          ------------
 DUMMY            VARCHAR2(1)

 






